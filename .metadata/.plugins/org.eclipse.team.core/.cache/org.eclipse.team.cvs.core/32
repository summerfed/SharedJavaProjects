<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>BPO Admin Tool Reports</title>
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous" media="screen">
<link href="css/c3.min.css" rel="stylesheet" media="screen">
<link href="css/metricsgraphics.css" rel="stylesheet" media="screen">
<style>

#waiting-vs-inprocess svg { margin: 0 auto; }

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: auto;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

.legend-box {
  cursor: pointer;  
}

.grid .tick {
    stroke: lightgrey;
    opacity: 0.7;
}
.grid path {
    stroke-width: 0;
}
</style>
<script src="http://code.jquery.com/jquery-2.1.4.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js" integrity="sha384-0mSbJDEHialfmuBBQP6A4Qrprq5OVfW37PRR3j5ELqxss1yVqOtnepnHVP9aJ7xS" crossorigin="anonymous"></script>
<script src="http://d3js.org/d3.v3.js"></script>
<script src="js/c3.min.js"></script>
<script src="js/metricsgraphics.min.js"></script>
</head>
<body>
<div class="container">
	<div class="row">
		<div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><svg id="node-progress" class="node-progress" height:"150"></div>
		<div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><div id="percentage-error" style="height: 150px"></div></div>
		<div class="col-xs-4 col-sm-4 col-md-4 col-lg-4"><div id="ave-duration" style="height: 150px"></div></div>
	</div>
	<div class="row">
		<div id="waiting-vs-inprocess" class="waiting-vs-inprocess col-sm-12"></div>
	</div>
</div>
</body>
<script src="js/multilinegraph.js"></script>
<script src="js/liquidfillgauge.js"></script>
<script>
	//console.log($.ajax("/bporeports?nodeId=test"));
	var config = defaultMultiSeriesLineGraphConfig;
	config.container = "#waiting-vs-inprocess";
	config.outerWidth = $(config.container).width();
	$.ajax("/bporeports?nodeId=test").done(function(data){
		try{
			config.jsonStr = $.parseJSON(data);
			console.log("VALID");
			console.log(config.jsonStr);
			generateMultiSeriesLineGraph(config);
		} catch (err) {
			console.log("invalid json" + err.message);
		}
	});


	setInterval(function() {
		//console.log(config.jsonStr);
	//	config.jsonStr = $.parseJSON('[{"time": "10:59:16", "waiting": 74, "processing": 0},{"time": "10:59:17", "waiting": 68, "processing": 0},{"time": "10:59:18", "waiting": 70, "processing": 0},{"time": "10:59:19", "waiting": 60, "processing": 10},{"time": "10:59:20", "waiting": 57, "processing": 25}]');
		config.outerWidth = $(config.container).width();
		$.ajax("/bporeports?nodeId=test").done(function(data){
			try{
				config.jsonStr = $.parseJSON(data);
				console.log("VALID");
				console.log(config.jsonStr);
				updateMultiSeriesLineGraph(config);
			} catch (err) {
				console.log("invalid json" + err.message);
			}
		});
	}, 1000);

    var liquidgaugeconfig = liquidFillGaugeDefaultSettings();
    liquidgaugeconfig.circleThickness = 0.05;
    liquidgaugeconfig.circleColor = "#7777FF";
    liquidgaugeconfig.textColor = "#4444FF";
    liquidgaugeconfig.waveTextColor = "#AAAAFF";
    liquidgaugeconfig.waveColor = "#DDDDFF";
    liquidgaugeconfig.textVertPosition = 0.8;
    liquidgaugeconfig.waveAnimateTime = 1000;
    liquidgaugeconfig.waveHeight = 0.05;
    liquidgaugeconfig.waveAnimate = true;
    liquidgaugeconfig.waveRise = false;
    liquidgaugeconfig.waveHeightScaling = false;
    liquidgaugeconfig.waveOffset = 0.25;
    liquidgaugeconfig.textSize = 0.75;
    liquidgaugeconfig.waveCount = 3;
    //enclose the code below in an ajax done snippet
    var gauge = loadLiquidFillGauge("node-progress", 90, liquidgaugeconfig);
	
    //enclose the code below in an ajax code snippet
    //the servlet here should throw a string of this format: withError|withoutError
    //both are numbers
    var errorpercentage = c3.generate({
    	bindto: '#percentage-error',
	    data: {
	        columns: [
	            ['error', 30],
	            ['passed', 70],
	        ],
	        type : 'pie'
	    }
	});
	
    //enclose the following codes in an ajax call for maximum allowed duration
    var maxdur = 60*2;
    var thresholds = [maxdur/4, maxdur/2, maxdur/4 + maxdur/2, maxdur];
	
    //inside that ajax call, do another ajax call for this code region
	var avedur = c3.generate({
		bindto: "#ave-duration",
	    data: {
	        columns: [
	            ['data', 69.4]
	        ],
	        type: 'gauge'
	    },
	    gauge: {
	        label: {
	            format: function(value, ratio) {
	                return value;
	            },
	        },
			max: maxdur,
			units: ' minutes',
	    },
	    color: {
	        pattern: ['#FF0000', '#F97600', '#F6C600', '#60B044'], // the three color levels for the percentage values.
	        threshold: {
	            unit: ' minutes',
	            values: [thresholds[0], thresholds[1], thresholds[2], thresholds[3]]
	        }
	    },
	    size: {
	        height: 150
	    }
	});
</script>
</html>