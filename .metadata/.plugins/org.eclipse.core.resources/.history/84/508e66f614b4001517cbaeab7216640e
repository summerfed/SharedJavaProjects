package com.svi.test.main;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;

import com.fed.dev.utilities.FileUtility;
import com.svi.bpo.graph.BPO;
import com.svi.utilities.ini.IniUtil;

public class Main {
	private static final String CONFIG_PATH = "config/config.ini";
	private static final String GENERAL_SETTINGS = "GENERAL_SETTINGS";
	private static final String GRAPH_URL  = "GRAPH_URL";
	private static final String OUTPUT_DIR  = "OUTPUT_DIR";
	private static final String OUTPUT_FILENAME  = "OUTPUT_FILENAME";
	
	public static void main(String[] args) throws IOException, InterruptedException {
		IniUtil ini = new IniUtil();
		FileUtility fileUtil = new FileUtility();
		String graphUrl = ini.readValIni(GENERAL_SETTINGS, GRAPH_URL, CONFIG_PATH);
		String outputPath = fileUtil.addSlashAtEndDir(ini.readValIni(GENERAL_SETTINGS, OUTPUT_DIR, CONFIG_PATH));
		String outputFileName = ini.readValIni(GENERAL_SETTINGS, OUTPUT_FILENAME, CONFIG_PATH);
		
		File fileDir = new File(outputPath);
		File csvFile = new File(outputPath + outputFileName);
		if(!fileDir.exists()) {
			fileDir.mkdirs();
		}
		
		if(!csvFile.exists()) {
			String tmp = "time\twaiting\tin process\n";
			csvFile.createNewFile();
			Files.write(csvFile.toPath(), tmp.getBytes(), StandardOpenOption.APPEND);
		}
		
		BPO bpo = new BPO(graphUrl);
		while(true) {
			String currentTime = new SimpleDateFormat("hh':'mm':'ss").format(new Date());
			List<Map<String, Object>> tmp = bpo.ReportFunctions.getNodeCurrentWaitingAndInProcessElementCount("Node1");
			for(Map<String, Object> each: tmp) {
				int waiting = (int) each.get("currentTotalWaitingElements");
				int process = (int) each.get("currentTotalInProcessElements");
				String data = currentTime+"\t"+waiting+"\t"+process+"\n";
				Files.write(csvFile.toPath(), data.getBytes(), StandardOpenOption.APPEND);
				Thread.sleep(1000);
			}
		}
	}

}
